# [PackageDev] target_format: plist, ext: tmLanguage tmPreferences
---
name: MVN PCS
scopeName: source.mvn
fileTypes: [asm]
uuid: cafaadf5-a855-4b06-8867-78a387d1b659

# 0.2.0

patterns:
- include: '#expression'

repository:

  expression:
    name: invalid.illegal.mvn
    patterns:
    - include: '#labeled-instruction'
    - include: '#instruction'
    - include: '#comment'
    - include: '#delimiter'

  labeled-instruction:
    name: labeled.instruction.mvn
    begin: ^\s*(?![><$K+\-*/]\s|JP\s|JZ\s|JN\s|LV\s|LD\s|MM\s|SC\s|RS\s|HM\s|GD\s|PD\s|OS\s)(\b[\w\-_]+\b)
    beginCaptures:
      '1': { name: entity.name.tag.mvn }
    end: $
    patterns:
    - include: '#instruction'
    - name: invalid.illegal.mvn
      match: '[^ \t]'

  instruction:
    name: instruction.mvn
    begin: (?:^|\s)([><$K+\-*/]|JP|JZ|JN|LV|LD|MM|SC|RS|HM|GD|PD|OS)(?=\s|$)
    beginCaptures:
      '1': { name: entity.name.function.mvn }
    end: $
    patterns:
    - include: '#parameter'
    - include: '#comment'
    - name: invalid.illegal.mvn
      match: '[^ \t]'
  # if it's not a parameter or comment, then it's a syntax error

  label:
    name: entity.name.tag.mvn
    match: ^\s*(?![><$K+\-*/]\s|JP\s|JZ\s|JN\s|LV\s|LD\s|MM\s|SC\s|RS\s|HM\s|GD\s|PD\s|OS\s)(\b[\w\-_]+\b)
    # First word on line '(\b[\w\-_]\b)' that isn't an operation

  parameter:
    name: parameter.mvn
    patterns:
    - include: '#parameter-value'
    - include: '#parameter-label'

  parameter-value:
    name: constant.numeric.mvn
    match: (/[\da-fA-F]{1,4}|=\d{1,5}|`\w{1,2}|#[01]{1,16})

  parameter-label:
    name: variable.parameter.mvn
    match: (?<=[><$K+\-*/]|JP|JZ|JN|LV|LD|MM|SC|RS|HM|GD|PD|OS)\s+(?![><$K+\-*/]\s|JP\s|JZ\s|JN\s|LV\s|LD\s|MM\s|SC\s|RS\s|HM\s|GD\s|PD\s|OS\s)(\b[\w\-_]+\b)

  comment:
    name: comment.mvn
    match: (?<=^|[ \t])(;).*$\n?

  delimiter:
    name: delimiter.mvn
    patterns:
    - include: '#delimiter-value'
    - include: '#delimiter-label'

  delimiter-value:
    name: delimiter.value.mvn
    begin: ^\s*([@&])[ \t]
    beginCaptures:
      '1': { name: keyword.control.mvn }
    end: $
    patterns:
    - include: '#parameter-value'
    - name: invalid.illegal.mvn
      match: '[^ \t]'

  delimiter-label:
    name: delimiter.label.mvn
    begin: ^\s*([#])[ \t]
    beginCaptures:
      '1': { name: keyword.control.mvn }
    end: $
    patterns:
    - name: variable.parameter.mvn
      match: (?<=#[ \t])\s*(?![><$K+\-*/]\s|JP\s|JZ\s|JN\s|LV\s|LD\s|MM\s|SC\s|RS\s|HM\s|GD\s|PD\s|OS\s)(\b[\w\-_]+\b)
    - name: invalid.illegal.mvn
      match: '[^ \t]'

...
